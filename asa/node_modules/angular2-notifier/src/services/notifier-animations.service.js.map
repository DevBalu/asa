{"version":3,"sources":["src/services/notifier-animations.service.ts"],"names":[],"mappings":";;;;;;;;;;AAGA,qBAA2B,eAAe,CAAC,CAAA;AAc3C;IAcC;QACC,IAAI,CAAC,qBAAqB,EAAE,CAAC;IAC9B,CAAC;IASM,+CAAY,GAAnB,UAAqB,IAAY,EAAE,GAAW,EAAE,SAAwC;QAGvF,IAAM,SAAS,GAA4B,IAAI,CAAC,gBAAgB,CAAE,IAAI,CAAE,CAAE,GAAG,CAAE,CAAE,SAAS,CAAE,CAAC;QAC7F,IAAM,QAAQ,GAAW,CAAE,GAAG,KAAK,IAAI,CAAE;cACtC,SAAS,CAAC,SAAS,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ;cAC9C,SAAS,CAAC,SAAS,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC;QAClD,IAAM,MAAM,GAAW,CAAE,GAAG,KAAK,IAAI,CAAE;cACpC,SAAS,CAAC,SAAS,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM;cAC5C,SAAS,CAAC,SAAS,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC;QAGhD,MAAM,CAAC;YACN,SAAS,EAAE;gBACV,SAAS,CAAC,IAAI;gBACd,SAAS,CAAC,EAAE;aACZ;YACD,OAAO,EAAE;gBACR,KAAK,EAAE,EAAE;gBACT,QAAQ,EAAE,QAAQ;gBAClB,MAAM,EAAE,MAAM;gBACd,IAAI,EAAE,UAAU;aAChB;SACD,CAAC;IAEH,CAAC;IAKO,wDAAqB,GAA7B;QACC,IAAI,CAAC,gBAAgB,GAAG;YAEvB,IAAI,EAAE;gBACL,EAAE,EAAE,UAAE,SAAwC;oBAC7C,MAAM,CAAC;wBACN,IAAI,EAAE;4BACL,OAAO,EAAE,CAAC;yBACV;wBACD,EAAE,EAAE;4BACH,OAAO,EAAE,CAAC;yBACV;qBACD,CAAC;gBACH,CAAC;gBACD,GAAG,EAAE,UAAE,SAAwC;oBAC9C,MAAM,CAAC;wBACN,IAAI,EAAE;4BACL,OAAO,EAAE,CAAC;yBACV;wBACD,EAAE,EAAE;4BACH,OAAO,EAAE,CAAC;yBACV;qBACD,CAAC;gBACH,CAAC;aACD;YAED,KAAK,EAAE;gBACN,EAAE,EAAE,UAAE,SAAwC;oBAC7C,IAAI,cAAsB,CAAC;oBAC3B,IAAI,YAAoB,CAAC;oBACzB,MAAM,CAAC,CAAE,SAAS,CAAC,SAAS,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,QAAS,CAAC,CAAC,CAAC;wBAC9D,KAAK,MAAM;4BACV,IAAI,YAAY,GAAW,mBAAkB,SAAS,CAAC,SAAS,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,QAAQ,gBAAc,CAAC;4BAC9G,cAAc,GAAG;gCAChB,SAAS,EAAE,kBAAiB,YAAY,aAAW;6BACnD,CAAC;4BACF,YAAY,GAAG;gCACd,SAAS,EAAE,wBAAwB;6BACnC,CAAC;4BACF,KAAK,CAAC;wBACP,KAAK,QAAQ;4BACZ,IAAI,cAAc,SAAQ,CAAC;4BAC3B,MAAM,CAAC,CAAE,SAAS,CAAC,SAAS,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAS,CAAC,CAAC,CAAC;gCAC5D,KAAK,KAAK;oCACT,cAAc,GAAG,mBAAkB,SAAS,CAAC,SAAS,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,QAAQ,gBAAc,CAAC;oCACpG,KAAK,CAAC;gCACP,KAAK,QAAQ;oCACZ,cAAc,GAAG,kBAAiB,SAAS,CAAC,SAAS,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,QAAQ,gBAAc,CAAC;oCACnG,KAAK,CAAC;4BACR,CAAC;4BACD,cAAc,GAAG;gCAChB,SAAS,EAAE,wBAAuB,cAAc,UAAQ;6BACxD,CAAC;4BACF,YAAY,GAAG;gCACd,SAAS,EAAE,2BAA2B;6BACtC,CAAC;4BACF,KAAK,CAAC;wBACP,KAAK,OAAO;4BACX,IAAI,aAAa,GAAW,kBAAiB,SAAS,CAAC,SAAS,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,QAAQ,gBAAc,CAAC;4BAC9G,cAAc,GAAG;gCAChB,SAAS,EAAE,kBAAiB,aAAa,aAAW;6BACpD,CAAC;4BACF,YAAY,GAAG;gCACd,SAAS,EAAE,wBAAwB;6BACnC,CAAC;4BACF,KAAK,CAAC;oBACR,CAAC;oBACD,MAAM,CAAC;wBACN,IAAI,EAAE,cAAc;wBACpB,EAAE,EAAE,YAAY;qBAChB,CAAC;gBACH,CAAC;gBACD,GAAG,EAAE,UAAE,SAAwC;oBAC9C,IAAI,cAAsB,CAAC;oBAC3B,IAAI,YAAoB,CAAC;oBACzB,MAAM,CAAC,CAAE,SAAS,CAAC,SAAS,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,QAAS,CAAC,CAAC,CAAC;wBAC9D,KAAK,MAAM;4BACV,IAAI,YAAY,GAAW,mBAAkB,SAAS,CAAC,SAAS,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,QAAQ,gBAAc,CAAC;4BAC9G,cAAc,GAAG;gCAChB,SAAS,EAAE,qBAAoB,SAAS,CAAC,eAAe,EAAE,YAAU;6BACpE,CAAC;4BACF,YAAY,GAAG;gCACd,SAAS,EAAE,kBAAiB,YAAY,UAAO,SAAS,CAAC,eAAe,EAAE,YAAU;6BACpF,CAAC;4BACF,KAAK,CAAC;wBACP,KAAK,QAAQ;4BACZ,IAAI,cAAc,SAAQ,CAAC;4BAC3B,MAAM,CAAC,CAAE,SAAS,CAAC,SAAS,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAS,CAAC,CAAC,CAAC;gCAC5D,KAAK,KAAK;oCACT,cAAc,GAAG,mBAAkB,SAAS,CAAC,SAAS,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,QAAQ,gBAAc,CAAC;oCACpG,KAAK,CAAC;gCACP,KAAK,QAAQ;oCACZ,cAAc,GAAG,kBAAiB,SAAS,CAAC,SAAS,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,QAAQ,gBAAc,CAAC;oCACnG,KAAK,CAAC;4BACR,CAAC;4BACD,cAAc,GAAG;gCAChB,SAAS,EAAE,wBAAuB,SAAS,CAAC,eAAe,EAAE,YAAU;6BACvE,CAAC;4BACF,YAAY,GAAG;gCACd,SAAS,EAAE,wBAAuB,cAAc,UAAQ;6BACxD,CAAC;4BACF,KAAK,CAAC;wBACP,KAAK,OAAO;4BACX,IAAI,aAAa,GAAW,kBAAiB,SAAS,CAAC,SAAS,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,QAAQ,gBAAc,CAAC;4BAC9G,cAAc,GAAG;gCAChB,SAAS,EAAE,qBAAoB,SAAS,CAAC,eAAe,EAAE,YAAU;6BACpE,CAAC;4BACF,YAAY,GAAG;gCACd,SAAS,EAAE,kBAAiB,aAAa,UAAO,SAAS,CAAC,eAAe,EAAE,YAAU;6BACrF,CAAC;4BACF,KAAK,CAAC;oBACR,CAAC;oBACD,MAAM,CAAC;wBACN,IAAI,EAAE,cAAc;wBACpB,EAAE,EAAE,YAAY;qBAChB,CAAC;gBACH,CAAC;aACD;SAED,CAAC;IACH,CAAC;;IAhLF;QAAC,iBAAU,EAAE;;gCAAA;IAiLb,+BAAC;AAAD,CAhLA,AAgLC,IAAA;AAhLY,gCAAwB,2BAgLpC,CAAA","file":"src/services/notifier-animations.service.js","sourcesContent":["/**\n * External imports\n */\nimport { Injectable } from '@angular/core';\n\n/**\n * Internal imports\n */\nimport { NotifierAnimation } from './../models/notifier-animation.model';\nimport { NotifierAnimationPreset } from './../models/notifier-animation-preset.model';\nimport { NotifierNotificationComponent } from './../components/notifier-notification.component';\n\n/**\n * Notifier animation service\n * This service provides all animation presets\n */\n@Injectable()\nexport class NotifierAnimationService {\n\n\t/**\n\t * List of all animation presets, each with one name and both directions ('in' and 'out')\n\t */\n\tprivate animationPresets: {\n\t\t[ name: string ]: {\n\t\t\t[ way: string ]: ( component: NotifierNotificationComponent ) => NotifierAnimationPreset\n\t\t};\n\t};\n\n\t/**\n\t * Constructor\n\t */\n\tpublic constructor() {\n\t\tthis.setupAnimationPresets();\n\t}\n\n\t/**\n\t * Get animation preset, result follows the Web Animations API syntax\n\t * @param  {string}                        name      Animation method name\n\t * @param  {string}                        way       Animation way, either 'in' or 'out'\n\t * @param  {NotifierNotificationComponent} component Notifier notification component\n\t * @return {NotifierAnimation}                       Notifier animation preset\n\t */\n\tpublic getAnimation( name: string, way: string, component: NotifierNotificationComponent ): NotifierAnimation {\n\n\t\t// Get all necessary animation values\n\t\tconst keyframes: NotifierAnimationPreset = this.animationPresets[ name ][ way ]( component );\n\t\tconst duration: number = ( way === 'in' )\n\t\t\t? component.getConfig().animations.show.duration\n\t\t\t: component.getConfig().animations.hide.duration;\n\t\tconst easing: string = ( way === 'in' )\n\t\t\t? component.getConfig().animations.show.easing\n\t\t\t: component.getConfig().animations.hide.easing;\n\n\t\t// Build animation\n\t\treturn {\n\t\t\tkeyframes: [\n\t\t\t\tkeyframes.from,\n\t\t\t\tkeyframes.to\n\t\t\t],\n\t\t\toptions: {\n\t\t\t\tdelay: 10, // Give the browser some lunch time ...\n\t\t\t\tduration: duration, // Time in ms\n\t\t\t\teasing: easing,\n\t\t\t\tfill: 'forwards' // Keep the new state after the animation finished\n\t\t\t}\n\t\t};\n\n\t}\n\n\t/**\n\t * Initial setup, adding all default animation presets to the service\n\t */\n\tprivate setupAnimationPresets(): void {\n\t\tthis.animationPresets = {\n\n\t\t\tfade: {\n\t\t\t\tin: ( component: NotifierNotificationComponent ): NotifierAnimationPreset => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tfrom: {\n\t\t\t\t\t\t\topacity: 0\n\t\t\t\t\t\t},\n\t\t\t\t\t\tto: {\n\t\t\t\t\t\t\topacity: 1\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tout: ( component: NotifierNotificationComponent ): NotifierAnimationPreset => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tfrom: {\n\t\t\t\t\t\t\topacity: 1\n\t\t\t\t\t\t},\n\t\t\t\t\t\tto: {\n\t\t\t\t\t\t\topacity: 0\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tslide: {\n\t\t\t\tin: ( component: NotifierNotificationComponent ): NotifierAnimationPreset => {\n\t\t\t\t\tlet animationStart: Object;\n\t\t\t\t\tlet animationEnd: Object;\n\t\t\t\t\tswitch ( component.getConfig().position.horizontal.position ) {\n\t\t\t\t\t\tcase 'left':\n\t\t\t\t\t\t\tlet leftPosition: string = `calc( -100% - ${ component.getConfig().position.horizontal.distance }px - 10px )`;\n\t\t\t\t\t\t\tanimationStart = {\n\t\t\t\t\t\t\t\ttransform: `translate3d( ${ leftPosition }, 0, 0 )`\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tanimationEnd = {\n\t\t\t\t\t\t\t\ttransform: 'translate3d( 0, 0, 0 )'\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'middle':\n\t\t\t\t\t\t\tlet middlePosition: string;\n\t\t\t\t\t\t\tswitch ( component.getConfig().position.vertical.position ) {\n\t\t\t\t\t\t\t\tcase 'top':\n\t\t\t\t\t\t\t\t\tmiddlePosition = `calc( -100% - ${ component.getConfig().position.horizontal.distance }px - 10px )`;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'bottom':\n\t\t\t\t\t\t\t\t\tmiddlePosition = `calc( 100% + ${ component.getConfig().position.horizontal.distance }px + 10px )`;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tanimationStart = {\n\t\t\t\t\t\t\t\ttransform: `translate3d( -50%, ${ middlePosition }, 0 )`\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tanimationEnd = {\n\t\t\t\t\t\t\t\ttransform: 'translate3d( -50%, 0, 0 )'\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'right':\n\t\t\t\t\t\t\tlet rightPosition: string = `calc( 100% + ${ component.getConfig().position.horizontal.distance }px + 10px )`;\n\t\t\t\t\t\t\tanimationStart = {\n\t\t\t\t\t\t\t\ttransform: `translate3d( ${ rightPosition }, 0, 0 )`\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tanimationEnd = {\n\t\t\t\t\t\t\t\ttransform: 'translate3d( 0, 0, 0 )'\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\treturn {\n\t\t\t\t\t\tfrom: animationStart,\n\t\t\t\t\t\tto: animationEnd\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tout: ( component: NotifierNotificationComponent ): NotifierAnimationPreset => {\n\t\t\t\t\tlet animationStart: Object;\n\t\t\t\t\tlet animationEnd: Object;\n\t\t\t\t\tswitch ( component.getConfig().position.horizontal.position ) {\n\t\t\t\t\t\tcase 'left':\n\t\t\t\t\t\t\tlet leftPosition: string = `calc( -100% - ${ component.getConfig().position.horizontal.distance }px - 10px )`;\n\t\t\t\t\t\t\tanimationStart = {\n\t\t\t\t\t\t\t\ttransform: `translate3d( 0, ${ component.getCurrentShift() }px, 0 )`\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tanimationEnd = {\n\t\t\t\t\t\t\t\ttransform: `translate3d( ${ leftPosition }, ${ component.getCurrentShift() }px, 0 )`\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'middle':\n\t\t\t\t\t\t\tlet middlePosition: string;\n\t\t\t\t\t\t\tswitch ( component.getConfig().position.vertical.position ) {\n\t\t\t\t\t\t\t\tcase 'top':\n\t\t\t\t\t\t\t\t\tmiddlePosition = `calc( -100% - ${ component.getConfig().position.horizontal.distance }px - 10px )`;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'bottom':\n\t\t\t\t\t\t\t\t\tmiddlePosition = `calc( 100% + ${ component.getConfig().position.horizontal.distance }px + 10px )`;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tanimationStart = {\n\t\t\t\t\t\t\t\ttransform: `translate3d( -50%, ${ component.getCurrentShift() }px, 0 )`\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tanimationEnd = {\n\t\t\t\t\t\t\t\ttransform: `translate3d( -50%, ${ middlePosition }, 0 )`\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'right':\n\t\t\t\t\t\t\tlet rightPosition: string = `calc( 100% + ${ component.getConfig().position.horizontal.distance }px + 10px )`;\n\t\t\t\t\t\t\tanimationStart = {\n\t\t\t\t\t\t\t\ttransform: `translate3d( 0, ${ component.getCurrentShift() }px, 0 )`\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tanimationEnd = {\n\t\t\t\t\t\t\t\ttransform: `translate3d( ${ rightPosition }, ${ component.getCurrentShift() }px, 0 )`\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\treturn {\n\t\t\t\t\t\tfrom: animationStart,\n\t\t\t\t\t\tto: animationEnd\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\t};\n}\n"],"sourceRoot":"/source/"}